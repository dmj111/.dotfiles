[core]
    excludesfile = ~/.gitexcludes
    pager = less -F -X -R

[rerere]
    enabled = true

[color]
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    # meta = yellow bold
    meta = blue bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse

[apply]
    whitespace = warn

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
	a = add

	# One line log,
	lgl = log --graph --pretty=format:'%Cred%h%Creset \
	-%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' \
	--abbrev-commit --date=relative

	# One line log, limit to 20
	lg = lgl -n 20

	# One line log, --all
	lgla = lgl --all


        # log --graph --pretty=format:'%Cred%h%Creset \
	# -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' \
	# --abbrev-commit --date=relative \
	# -n 20

	# http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
	# one line log with stats
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat


	ci = commit --verbose
	pick = cherry-pick --sign-off

	st = status --short --branch

	# kick off a server
	serve = daemon --reuseaddr --base-path=. --export-all --verbose

	# Top committers
	top-commits = shortlog --summary --numbered --no-merges

	gdiff = difftool --gui --no-prompt

	# Prune all remote references
	prune-all = !git remote | xargs -n 1 git remote prune

	co = checkout
	cb = checkout -b
	ci = commit

	# How to unstage.  The -- prevents further args, like... --hard.
	unstage = reset HEAD --

	# Last commit
	last =  !git --no-pager log -1 HEAD --

	# Another log version
	l = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset \
	%s %C(white) %an, %ar%Creset'

	# Quick merge?
	qm = "!git checkout $1; git merge @{-1}"

	# Old log message.
	lol = log --pretty=oneline --abbrev-commit --graph --decorate

        new-branch = switch --no-track origin/HEAD -c
        nb = new-branch

        # Compare with what we would take to the main branch:
        dd = diff origin/HEAD...

	# show the merge merge result between two branches without
	# actually doing the merge.
	obdiff="!f() { git merge-tree `git merge-base ${1} ${2}` ${1} ${2} ; } ; f "

	# Different from upstream
	inc=log ..@{u} --decorate
	out=log @{u}.. --decorate

	# Different from main branch
	incm=log ..origin/HEAD --decorate
	outm=log origin/HEAD.. --decorate

        # Rebase off of main
        rbm = rebase origin/HEAD

	# Save all changes to working dir to a commit, and then pop that commit.
	# Branch -vv shows the status of a branch (and against its upstream)
	bvv=branch -vv --sort=committerdate
	rbvv=branch -vv --sort=-committerdate

	# hasm - current branch has the main branch in its history
	hasm="!git merge-base --is-ancestor origin/HEAD HEAD && echo 'contains main' || echo 'does not contain main'"
	# inm - current branch is in main branch history
	inm="!git merge-base --is-ancestor HEAD origin/HEAD && echo 'contained' || echo 'not contained'"

	# checkout ours during merge conflict.
        ours = "!f() { git checkout --ours $@; git add $@; } ; f "

	# checkout theirs during merge conflict.
        theirs = "!f() { git checkout --theirs $@; git add $@; } ; f "

	please = push --force-with-lease
	commend = commit --amend --no-edit
	# only unstaged
	stsh = stash --keep-index

	# tracked + untracked
	staash = stash --include-untracked

	# tracked + untracked + ignored.
	# staaash = stash --all # too rare for me

[push]
    # only push branches that are tracking a remote.
    default=current

[credential]
    helper = osxkeychain

[fetch]
    prune = true

[diff]
    submodule = log
    renames = copies
    mnemonicprefix = true

[rebase]
  autosquash = true

# Match org headers
# Set `pat diff=org` in .gitattributes to use.
[diff "org"]
	xfuncname = "^\\*+ .*$"

# Match start of entries
[diff "ledger"]
	xfuncname = "^[[:digit:]].*"

[include]
	path = ~/.dotfiles/local/.gitconfig


# Use this to mark org headings as "functions" in get diff.
# Need "*.org diff=org" in gitattributes somewhere.

[diff "org"]
	xfuncname = "^\\*+ .*$"


# In local gitconfig:
# ----
# [user]
#   name =
#   email =

# [github]
#   user =
[init]
	defaultBranch = main
